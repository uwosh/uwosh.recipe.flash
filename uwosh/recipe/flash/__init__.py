
import os

settings_file_name = 'plone-flashstreamingserver.conf'

class Recipe(object):
    """
    Recipe to set flash streaming server settings
    """
    def __init__(self, buildout, name, options):
        self.name, self.options = name, options
        
        required_fields = ['server_address', 'ftp_address', 'ftp_user', 'ftp_password', 'ftp_media_directory']

        if len([f for f in required_fields if f not in options.keys()]) > 0:
            raise Exception("You did not provide all the required settings for the uwosh.flash recipe.  Required fields are %s" % required_fields)

        if 'instance' in buildout:
            self.conf_file_path = [buildout['instance']['location'] + "/etc/" + settings_file_name]
        elif 'zopeinstance' in buildout:
            self.conf_file_path = [buildout['zopeinstance']['location'] + '/etc/' + settings_file_name]
        elif 'zeoserver' in buildout:
            self.conf_file_path = []
            for option in buildout:
                if buildout[option].has_key('zeo-client') and buildout[option]['zeo-client']:
                    self.conf_file_path.append(buildout[option]['location'] + '/etc/' + settings_file_name)
        else:
            raise KeyError("The system is unable to find a Zope instance. "
                           "Please use the zope-instance parameter.")

    def install(self):
        """installer"""

        template = ("# Flash streaming settings\n"
                    "server_address %(server_address)s\n"
                    "ftp_address %(ftp_address)s\n"
                    "ftp_user %(ftp_user)s\n"
                    "ftp_password %(ftp_password)s\n"
                    "ftp_media_directory %(ftp_media_directory)s\n"
                    "ftp_use_passive_mode %(ftp_use_passive_mode)s\n")

        #default to true for this
        if not self.options.has_key('ftp_use_passive_mode'):
            self.options['ftp_use_passive_mode'] = "True"

        for config in self.conf_file_path:
            print "writing flash streaming settings for client %s" % config
            fi = open(config, 'w')
            fi.write("# generated by uwosh.recipe.flash recipe")
            fi.write(template % self.options)
            fi.close()

        return self.conf_file_path

    update = install
